version: '3.8'

services:
  client:
    build: ./frontend
    environment:
      VUE_APP_STOCK_MARKET_API_URL: http://localhost:8000
      VUE_APP_SUBSCRIPTIONS_API_URL: http://localhost:9000
    volumes:
      - ./frontend:/app
    depends_on:
      - stock-market
      - subscriptions
    command: npm run serve
    ports:
      - '8080:8080'

  stock-market:
    build: ./backend/stock_market
    environment:
      DATABASE_URL: postgres://postgres:postgres@stock-market-db:5432/postgres
    volumes:
      - ./backend/stock_market:/app
    depends_on:
      stock-market-db:
        condition: service_healthy
    ports:
      - '8000:8000'
    tty: true
    command: uvicorn code.app:app --host 0.0.0.0 --reload

  stock-market-worker:
    build: ./backend/stock_market
    environment:
      FINNHUB_API_KEY: cb36h0aad3i3uh8votcg
      DATABASE_URL: postgres://postgres:postgres@stock-market-db:5432/postgres
      RABBITMQ_URL: amqp://rabbitmq:5672
    volumes:
      - ./backend/stock_market:/app
    depends_on:
      stock-market-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    tty: true
    command: python -m code.worker

  stock-market-db:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 30s
      retries: 3
    ports:
      - '5432:5432'

  subscriptions:
    build: ./backend/subscriptions
    environment:
      DATABASE_URL: postgres://postgres:postgres@subscriptions-db:5432/postgres
    volumes:
      - ./backend/subscriptions:/app
    depends_on:
      subscriptions-db:
        condition: service_healthy
    ports:
      - '9000:8000'
    tty: true
    command: uvicorn code.app:app --host 0.0.0.0 --reload

  subscriptions-worker:
    build: ./backend/subscriptions
    environment:
      DATABASE_URL: postgres://postgres:postgres@subscriptions-db:5432/postgres
      RABBITMQ_URL: amqp://rabbitmq:5672
      STOCK_MARKET_URL: http://stock-market:8000
    volumes:
      - ./backend/subscriptions:/app
    depends_on:
      stock-market:
        condition: service_started
      subscriptions-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    tty: true
    command: python -m code.worker

  subscriptions-consumer:
    build: ./backend/subscriptions
    environment:
      DATABASE_URL: postgres://postgres:postgres@subscriptions-db:5432/postgres
      RABBITMQ_URL: amqp://rabbitmq:5672
    volumes:
      - ./backend/subscriptions:/app
    depends_on:
      subscriptions-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    tty: true
    command: python -m code.consumer

  subscriptions-db:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 30s
      retries: 3
    ports:
      - '5433:5432'

  notifications-consumer:
    build: ./backend/notifications
    environment:
      RABBITMQ_URL: amqp://rabbitmq:5672
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 465
      EMAIL_USERNAME: quqanai.quqanai@gmail.com
      EMAIL_PASSWORD: hvzwicxeepalfzge
    volumes:
      - ./backend/notifications:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    tty: true
    command: python -m code.consumer

  rabbitmq:
    image: rabbitmq:alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 3
